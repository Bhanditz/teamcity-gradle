<?xml version="1.0" encoding="UTF-8"?>
<dsl-extension kind="buildStep" type="gradle-runner" generateDslJar="true">
  <class name="GradleBuildStep"/>
  <init>
    <param name="teamcity.coverage.emma.include.source" value="true" />
    <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
  </init>
  <function name="gradle"/>
  <params>
    <param name="ui.gradleRunner.gradle.tasks.names" dslName="tasks">
      <description>Space separated task names, when not set the 'default' task is used</description>
    </param>
    <param name="ui.gradleRUnner.gradle.build.file" dslName="buildFile" description="Path to build file"/>
    <param name="ui.gradleRunner.gradle.incremental" dslName="incremental" type="boolean" trueValue="true" falseValue="">
      <description>When set to true the :buildDependents task will be run on projects affected by changes</description>
    </param>
    <param name="teamcity.build.workingDir" dslName="workingDir" description="Custom working directory for gradle script"/>
    <param name="ui.gradleRunner.gradle.home" dslName="gradleHome">
      <description>Path to the Gradle home directory (parent of 'bin' directory). Overrides agent GRADLE_HOME environment variable</description>
    </param>
    <param name="ui.gradleRunner.additional.gradle.cmd.params" dslName="gradleParams">
      <description>Additional parameters will be added to the 'Gradle' command line</description>
    </param>
    <param name="ui.gradleRunner.gradle.wrapper.useWrapper" dslName="useGradleWrapper" type="boolean" trueValue="true" falseValue=""/>
    <param name="ui.gradleRunner.gradle.wrapper.path" dslName="gradleWrapperPath">
      <description>Optional path to the Gradle wrapper script, relative to the working directory</description>
    </param>
    <param name="ui.gradleRunner.gradle.debug.enabled" dslName="enableDebug" type="boolean" trueValue="true" falseValue=""/>
    <param name="ui.gradleRunner.gradle.stacktrace.enabled" dslName="enableStacktrace" type="boolean" trueValue="true" falseValue=""/>
    <param name="target.jdk.home" dslName="jdkHome"/>
    <param name="jvmArgs"/>
    <param name="teamcity.coverage.runner" dslName="coverage" type="CoverageRunner"/>
    <param name="teamcity.coverage.idea.excludePatterns" dslName="ideaCoverageExcludes">
      <description>
        Newline-separated patterns for fully qualified class names to be analyzed by code coverage.
        A pattern should start with a valid package name and can contain a wildcard, for example: org.apache.*
      </description>
    </param>
    <param name="teamcity.coverage.idea.includePatterns" dslName="ideaCoverageIncludes">
      <description>Newline-separated patterns for fully qualified class names to be excluded from the coverage. Exclude patterns have priority over include patterns.</description>
    </param>
    <param name="teamcity.coverage.jacoco.classpath" dslName="jacocoClasspath">
      <description>
        Newline-delimited set of path patterns in the form of +|-:{path} to scan for class files to be analyzed.
        Ant like patterns are supported, e.g.: '+:build/main/**/*.class'.
      </description>
    </param>
    <param name="teamcity.coverage.jacoco.patterns" dslName="jacocoPatterns">
      <description>Newline-delimited set of patterns in the form of +|-:{pattern} of classes to analyze. Wildcards are supported, e.g. '+:com.*:+:org.*'.</description>
    </param>
  </params>
  <types>
    <enum name="CoverageRunner">
      <option name="IDEA"/>
      <option name="JACOCO"/>
    </enum>
  </types>
</dsl-extension>